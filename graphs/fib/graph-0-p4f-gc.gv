digraph BST {
size="6,4" ; ratio = fill;
 "a\n Env = Map(id -> (id,List()), a -> (a,List()), b -> (b,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9" -> "Final(Set(NumTop, BoolLit(true)))";
"idx\n Env = Map(id -> (id,List()), a -> (a,List()), idx -> (idx,List()))\n  store hash = 1177321596\nHCFAKAddr(idx,Map(id -> (id,List()), a -> (a,List()), idx -> (idx,List())))" -> "(let ((b (id #t )))  a)\n Env = Map(id -> (id,List()), a -> (a,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9";
"idx\n Env = Map(id -> (id,List()), a -> (a,List()), b -> (b,List()), idx -> (idx,List()))\n  store hash = 1177321596\nHCFAKAddr(idx,Map(id -> (id,List()), a -> (a,List()), b -> (b,List()), idx -> (idx,List())))" -> "a\n Env = Map(id -> (id,List()), a -> (a,List()), b -> (b,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9";
"(let ((a (id 1 )))  (let ((b (id #t )))  a))\n Env = Map(id -> (id,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9" -> "idx\n Env = Map(id -> (id,List()), a -> (a,List()), idx -> (idx,List()))\n  store hash = 1177321596\nHCFAKAddr(idx,Map(id -> (id,List()), a -> (a,List()), idx -> (idx,List())))";
"(let ((id (lambda (idx)  idx)))  (let ((a (id 1 )))  (let ((b (id #t )))  a)))\n Env = Map()\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9" -> "(let ((a (id 1 )))  (let ((b (id #t )))  a))\n Env = Map(id -> (id,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9";
"(let ((b (id #t )))  a)\n Env = Map(id -> (id,List()), a -> (a,List()))\n  store hash = 1177321596\norg.ucombinator.scheme.cfa.kcfa.PointerCESKMachinery$InitKAddr$@28b8b6e9" -> "idx\n Env = Map(id -> (id,List()), a -> (a,List()), b -> (b,List()), idx -> (idx,List()))\n  store hash = 1177321596\nHCFAKAddr(idx,Map(id -> (id,List()), a -> (a,List()), b -> (b,List()), idx -> (idx,List())))";
}
